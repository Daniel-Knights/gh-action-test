name: Release
on: workflow_dispatch
env:
  TAG_NAME: v0.1.0

jobs:
  gh-release:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ env.TAG_NAME }} \
            --verify-tag
            --title "${{ env.TAG_NAME }}" \
            --notes "See [CHANGELOG.md](https://github.com/Daniel-Knights/changenog/blob/main/CHANGELOG.md) for details."

  release:
    needs: gh-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          # - target: x86_64-unknown-freebsd
          #   os: ubuntu-latest
    env:
      BUILD_PATH: target/${{ matrix.target }}/release/changenog${{ matrix.os == 'windows-latest' && '.exe' || '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          case ${{ matrix.target }} in
            aarch64-unknown-linux-gnu)
              sudo apt-get install -y gcc-aarch64-linux-gnu
              ;;
            aarch64-unknown-linux-musl)
              sudo apt-get install -y musl-tools
              ;;
          esac
      - name: Build for target
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}
          cp ${{ env.BUILD_PATH }} ./packages/js/${{ matrix.target }}
      - name: Rust cache
        uses: swatinem/rust-cache@v2
      - name: Add asset to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ env.TAG_NAME }} ${{ env.BUILD_PATH }} --clobber
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ./packages/*/${{ matrix.target }}
          if-no-files-found: error

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: ewrferf
        run: ls -la ./packages/js/aarch64-apple-darwin
      - uses: actions/download-artifact@v4
      - name: ewrferf
        run: ls -la ./packages/js/aarch64-apple-darwin
      - name: Publish to crates.io
        run: cargo publish --allow-dirty --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --dry-run
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
          run_install: false
      - name: Publish to NPM
        run: pnpm publish ./packages/js/core --access public --no-git-checks --dry-run # remove dry-run flags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
