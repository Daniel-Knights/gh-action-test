name: Release
on:
  push:
    tags:
      - "v*.*.*"
env:
  TAG_NAME: ${{ github.ref_name }}

jobs:
  # Release
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ env.TAG_NAME }} \
            --verify-tag \
            --title "${{ env.TAG_NAME }}" \
            --notes "See [CHANGELOG.md](https://github.com/Daniel-Knights/changenog/blob/main/CHANGELOG.md) for details."

  # Build
  build:
    needs: release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      id-token: write
    env:
      EXE_NAME: changenog${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      EXE_DIR: target/${{ matrix.target }}/release
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          case ${{ matrix.target }} in
            aarch64-unknown-linux-gnu)
              sudo apt-get install -y gcc-aarch64-linux-gnu
              echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config.toml
              echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml
              ;;
          esac

      - name: Add Rust target
        run: |
          rustup target add ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build for target
        run: |
          cargo build --release --target ${{ matrix.target }}
          cp ${{ env.EXE_DIR }}/${{ env.EXE_NAME }} ./packages/js/targets/${{ matrix.target }}

      - name: Upload asset
        uses: ./.github/actions/upload-asset.yml
        with:
          exe_dir: ${{ env.EXE_DIR }}
          exe_name: ${{ env.EXE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          target: ${{ matrix.target }}

      - name: Publish target to NPM
        uses: ./.github/actions/pnpm-publish.yml
        with:
          package_dir: ./packages/js/targets/${{ matrix.target }}

  # Publish
  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Publish to crates.io
        run: cargo publish --allow-dirty --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --dry-run

      - name: Publish core to NPM
        uses: ./.github/actions/pnpm-publish.yml
        with:
          package_dir: ./packages/js/core
